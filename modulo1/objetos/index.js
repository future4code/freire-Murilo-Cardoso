/* - **Exerc√≠cios de interpreta√ß√£o de c√≥digo**
    
Tente responder os exerc√≠cios dessa se√ß√£o sem executar o c√≥digo. Se ficar muito dif√≠cil, pode rodar no seu computador **para analisar e pensar sobre o resultado.** 
    
1.  Leia o c√≥digo abaixo */
//Matheus Nachtergaele
//Virginia Cavendish
//Globo, horario: 14h

//2)
//Juca, 3, SRD
//Juba, 3, SRD
//Jubo, 3 ,SRD

//Espalhamento ou spread 
// Essa sintaxe acessa o objeto e cria uma copia dele ou um array inteiro
//Ap√≥s a c√≥pia podemos fazer qualquer altera√ß√£o
//

//3)
//N√£o entendi 


//Exerc√≠cios de escrita de c√≥digo

/* 1. Resolva os passos a seguir: 
    
a) Crie um objeto. Ele deve conter duas propriedades: nome (string) e apelidos (um array que sempre ter√° exatamente **tr√™s apelidos**). Depois, escreva uma fun√ß√£o que recebe como entrada um objeto e imprime uma mensagem no modelo abaixo**:** */

/* // Exemplo de entrada
const pessoa = {
    nome: "Amanda", 
    apelidos: ["Amandinha", "Mandinha", "Mandi"]
 }
 
 // Exemplo de sa√≠da
 "Eu sou Amanda, mas pode me chamar de: Amandinha, Mandinha ou Mandi" */

/*  const pessoa = {
    nome: "Bruna", //n√£o esque√ßa da virgula!
    apelidos:["abobora", "batatinha","cenourinha"]
 
}
 console.log(`Eu sou ${pessoa.nome}, mas pode me chamar de: ${pessoa.apelidos[0]}, ${pessoa.apelidos[1]} ou ${pessoa.apelidos[2]}`) */



 /* b) Agora, usando o operador spread, crie um novo objeto mantendo o valor da propriedade nome, mas com uma nova lista de tr√™s apelidos. Depois, chame a fun√ß√£o feita no item anterior passando como argumento o novo objeto */


/* const pessoa = {
    nome: "Bruna", //n√£o esque√ßa da virgula!
    apelidos:["abobora", "batatinha","cenourinha"]

}
    const novaPessoa = {
        ...pessoa,
        apelidos: ['Carolzinha','Caca',"Lolzinha"]

    }
    console.log(`Eu sou ${novaPessoa.nome}, mas pode me chamar de: ${novaPessoa.apelidos[0]}, ${novaPessoa.apelidos[1]} ou ${novaPessoa.apelidos[2]}`) */



/*     //2. Resolva os passos a seguir: 
    
    a) Crie dois objetos diferentes com as seguintes propriedades: nome, idade e profiss√£o. 
    
    b) Escreva uma fun√ß√£o que receba esses objetos e retorne um array com as seguintes informa√ß√µes: */

 /*    /1. O valor de `nome`
    2. O numero de caracteres do valor `nome`
    3. O valor de `idade`
    4. O valor de `profiss√£o`
    5. O numero de caracteres do valor `profiss√£o` */

  /*   const objetoUm = {
        nome: 'Carlos',
        idade: 25,
        profiss√£o:'Carteiro'

    }

    const objetoDois = {
        nome: 'Denis',
        idade:24,
        profiss√£o:'Programador'
        
    }

    //function objetos(objetoUm, objetoDois)

    const objeto = [`${objetoUm.nome}, ${objetoUm.nome.length}, ${objetoUm.idade}, ${objetoUm.profiss√£o}, ${objetoUm.profiss√£o.length}`]

    const objetoOutro = [`${objetoDois.nome}, ${objetoDois.nome.length}, ${objetoDois.idade}, ${objetoDois.profiss√£o}, ${objetoDois.profiss√£o.length}`]

    console.log(objeto, objetoOutro)
    //console.log(objetoOutro) */



    //3)

/*     3. Resolva os passos a seguir: 
    
    a) Crie uma vari√°vel de escopo global que guarde um `array` vazio chamada `carrinho`
    
    b) Crie tr√™s novos objetos que representem frutas de um sacol√£o. Eles devem ter as seguintes propriedades: nome (`string`) e disponibilidade (`boolean` - devem come√ßar como `true`)
    
    c) Crie uma fun√ß√£o que **receba** um objeto fruta por **par√¢metro** e coloque-a dentro do array de `carrinho`. Invoque essa fun√ß√£o passando os tr√™s objetos criados. 
    
    - üí°  Dica
        
       
        üí° Aqui voc√™ deve usar o m√©todo **push()**
        
        
    d) Imprima a vari√°vel `carrinho` e garanta que ela agora seja um **array preenchido com tr√™s objetos.** 
    */

    const carrinho = []

    const frutaUm = {
        nome: "Ma√ßa",
        disponibiliade: true
    }

    const frutaDois = {
        nome: "Pera",
        disponibiliade: true
    }
    const frutaTres = {
        nome: "Banana",
        disponibiliade: true
    }
    
    carrinho.push (frutaUm)
    carrinho.push (frutaDois)
    carrinho.push (frutaTres)

    console.log(carrinho)
    
    //function sacolao(frutaUm, frutaDois, frutaTres){
        //let compra1 = carrinho.push(frutaUm.nome, frutaDois.nome, frutaTres.nome);
        //return sacolao  
    
    
    
    //sacolao()
     //sacolao(carrinho)
    


    //console.log(carrinho) */